<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Details</title>
    <link rel="stylesheet" href="/style/eventDetails.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(function() {
            $("#header").load("/components/header.html");
        });
    </script>
        <style>


            #loadingOverlay {
                display: none;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
                background-color: rgba(0, 0, 0, 0.5);
                z-index: 9999;
            }
    
            #loadingOverlay .spinner-border {
                width: 3rem;
                height: 3rem;
            }
    
            .alert-container {
                position: fixed;
                top: 1rem;
                right: 1rem;
                z-index: 9999;
            }
        </style>
</head>

<body>
    <div id="header"></div>
    <div class="alert-container"></div>
    <div class="event-container">
        <div class="event-name">
            <h2 class="event-title"><%= event.eventName %></h2><br>
        </div>
        <div class="container row ">
          <div class="event-image col-sm-6 details">
            <img src="/<%= event.imagePath %>" alt="<%= event.eventName %>" width="350" height="350">
          </div>
          <div class="event-details col-sm-6">
              <p>
                  <span class="detail-label">Venue:</span> <%= event.venue %><br>
                  <span class="detail-label">Date:</span> <%= event.eventDate.toLocaleDateString("en-GB")  %><br>
                  <span class="detail-label">Category:</span> <%= event.category %><br>
                  <span class="detail-label">Content:</span> <%= event.content %><br>
                  <span class="detail-label">Event Leader:</span> <%= event.eventLeader.name %><br>
                  <span class="detail-label">Total Participants:</span> <%= event.totalPart %><br>
                  <span class="detail-label">No. of Beneficiaries:</span> <%= event.numberOfBenificiar %><br>
                  <span class="detail-label">Report by:</span> <%= event.reportWrittenBy.name %><br>
                  <span class="detail-label">Organiser Hours:</span><%= event.organisersHr %><br>
                  <span class="detail-label">Participation Hours:</span> <%= event.hours %><br>
              </p>
          </div>
        </div>
        <br><br>
        <div class="organisers-section">
            <div class="organisers-list">
                <h4 class="section-title">Organisers:</h4>
                <table class="organisers-table">
                    <thead>
                        <tr>
                            <th>VEC</th>
                            <th>Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% event.organisers.forEach(function(organiser) { %>
                            <tr>
                                <td><%= organiser.vec %></td>
                                <td><%= organiser.name %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
        <br><br>
        <div class="participants-section">
            <div class="participants-list">
                <h4 class="section-title">Participants:</h4>
                <table class="participants-table">
                    <thead>
                        <tr>
                            <th>VEC</th>
                            <th>Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% event.participants.forEach(function(participant) { %>
                            <tr>
                                <td><%= participant.vec %></td>
                                <td><%= participant.name %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
        <br><br>
        <div>
            <button class="btn btn-danger" onclick="deleteEvent(`<%= event._id%>`)">Delete Event</button>
            <button id="openModalButton" onclick="openFunc(`<%= JSON.stringify(event.participants.map(participant => participant.vec))%>`)" class="btn btn-warning">Edit Event</button>
        </div>

<div id="myModal" class="modal modalModule">
  <div class="modal-content">
    
    <h6>Update Event</h6>
    <span class="close">&times;</span>
    <form id="modalForm"><br>
      <h6>Event: <%= event.eventName %></h6><br>
      <input id="eventId"type="text" value="<%= event._id%>" style="display: none;">
      <div class="mb-4 row">
        <label for="organisersHour" class="col-sm-3 col-form-label">Organisers Hour</label>
        <div class="col-sm-6">
            <input type="number" id="organisersHour" required class="form-control">
        </div>
    </div>
    <div class="mb-4 row">
      <label for="hours" class="col-sm-3 col-form-label">Participants Hours</label>
      <div class="col-sm-6">
          <input type="number" id="hours" required class="form-control">
      </div>
  </div>
  <div class="participants-section">
    <div class="participants-list">
        <h4 class="section-title">Participants:</h4>
        <table class="participants-table newTable">
            <thead>
                <tr>
                    <th>VEC</th>
                    <th>Name</th>
                    <!-- <th>Delete</th> -->
                </tr>
            </thead>
            <tbody>
                <% event.participants.forEach(function(participant) { %>
                    <tr>
                        <td><%= participant.vec %></td>
                        <td><%= participant.name %></td>
                        <!-- <td ><button onclick="partiDelete(`<%= participant.vec%>`)">Delete</button></td> -->
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>
<div class="add-participant-section">
    <h4 class="section-title">Add Participant:</h4>
    <select id="participantDropdown" class="form-select">
    </select>
    <button class="btn btn-success" onclick="addParticipant()">Add Participant</button>
</div>

  <div class="row">
    <div class="col-sm-6">
        <input type="submit" class="btn btn-warning" value="Update Event">
    </div>
</div>

    </form>
  </div>
</div>


    </div>
</body>
<script>

    
    function deleteEvent(eventId){
        console.log(eventId)
    fetch('/admin/eventDisplay/deleteEvent', {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ eventId }),
    })
      .then(response => response.json())
      .then(data => {
        console.log('Response:', data);
        showSuccessAlert(data.message)
        window.location.href = '/admin/eventDisplay';
      })
      .catch(error => {
        console.error('Error:', error);
        showErrorAlert(error)
      });
    }
    function partiDelete(vec){
        index = participant.indexOf(vec)
        console.log(index)
        if(index > -1){
            x = participant.splice(index,1)
        }
        console.log(participant)
        populateParticipantDropdown(participant)
        
    }

// function rerenderParticipantsTable(newParticipants) {
//     const participantsTable = document.querySelector('.newTable tbody');
//     const existingRows = participantsTable.querySelectorAll('tr');
//     participantsTable.innerHTML = '';
//     const existingVecs = new Set();
//     participants = {}
//     existingRows.forEach(row => {
//         const vecCell = row.querySelector('td:first-child');
//         const nameCell = row.querySelector('td:nth-child(2)');
//         if (vecCell) {
//             existingVecs.add(vecCell.textContent);
//             participants.add({'vec':vecCell,'name':nameCell})
//         }
//     });
//     participants.forEach(participant => {
//         if (!existingVecs.has(newParticipants)) {
//             const row = document.createElement('tr');
//             row.innerHTML = `
//                 <td>${participant.vec}</td>
//                 <td>${participant.name}</td>
//             `;
//             participantsTable.appendChild(row);
//             existingVecs.add(participant.vec);
//         }
//     });
// }


    function populateParticipantDropdown(participant) {
            const dropdown = document.getElementById('participantDropdown');
            dropdown.innerHTML = ''
    
            fetch('/admin/users')
            .then(response => response.json())
                .then((userData) => {
                    
                   
                        userData.forEach(user => {
                            let present = false
                            for (const parti of participant) {
                                if (user.vec === parti) {
                                    present = true
                                }
                            }
                            if (!present){
                                const option = document.createElement('option');
                                option.value = user.vec;
                                option.textContent = user.name;
                                dropdown.appendChild(option);
                            }
                    });
                  
                   
                })
                .catch(error => {
                    console.error('Error fetching user data:', error);
                });
        }


function addParticipant() {
    event.preventDefault(); 
    const selectedVec = document.getElementById('participantDropdown').value;
    const selectedName = document.querySelector(`#participantDropdown option[value='${selectedVec}']`).textContent;
    
    const participantsTable = document.querySelector('.newTable tbody');
    const existingVecs = new Set();

    participantsTable.querySelectorAll('tr').forEach(row => {
        const vecCell = row.querySelector('td:first-child');
        if (vecCell) {
            existingVecs.add(vecCell.textContent);
        }
    });

    if (!existingVecs.has(selectedVec)) {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${selectedVec}</td>
            <td>${selectedName}</td>
        `;
        participantsTable.appendChild(row);
        
        // Update the participant array
        participant.push(selectedVec);
        newParti.push(selectedVec)
        // Remove the added option from the dropdown
        const dropdownOption = document.querySelector(`#participantDropdown option[value='${selectedVec}']`);
        if (dropdownOption) {
            dropdownOption.remove();
        }
    }
}

    const modal = document.getElementById('myModal');
let participant = []
let newParti = []
const openModalButton = document.getElementById('openModalButton');
const closeButton = document.getElementsByClassName('close')[0];
function openFunc(parti){
   
    participant = JSON.parse(parti)
    console.log(typeof(participant))
    console.log(participant)
  modal.style.display = 'inline-block';
  modal.style.top = "2.5%";
  modal.style.left = '25%';
  modal.style.width = '50%';
  populateParticipantDropdown(participant)
};
closeButton.addEventListener('click', function() {
  modal.style.h = 'hnone';
});
window.addEventListener('click', function(event) {
  if (event.target == modal) {
    modal.style.display = 'none';
  }
});
const form = document.getElementById('modalForm');

form.addEventListener('submit', function(event) {
  event.preventDefault(); 
  console.log(newParti)
  console.log('hello')
  const eventId = document.getElementById('eventId').value;
  const organisersHr = document.getElementById('organisersHour').value;
  const hours = document.getElementById('hours').value;
  const requestBody = {
    eventId: eventId,
    organisersHr: organisersHr,
    hours: hours,
    parti:newParti
  };
  console.log(requestBody)

  fetch('/admin/eventDisplay/updateEvent', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(requestBody)
  })
    .then(response => response.json())
    .then(data => {
      console.log(data);
      modal.style.display = 'none';
      location.reload();
      showSuccessAlert('Event updated successfully')
    })
    .catch(error => {
      console.error('Error:', error);
      showErrorAlert(error)
    });
});
function showLoadingOverlay() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        function hideLoadingOverlay() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        function showSuccessAlert(message) {
            const alertContainer = document.querySelector('.alert-container');
            const alert = document.createElement('div');
            alert.classList.add('alert', 'alert-success', 'alert-dismissible', 'fade', 'show');
            alert.innerHTML = `
                <strong>Success!</strong> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            alertContainer.appendChild(alert);

            setTimeout(() => {
                alertContainer.removeChild(alert);
            }, 2000);
        }

        function showErrorAlert(message) {
            const alertContainer = document.querySelector('.alert-container');
            const alert = document.createElement('div');
            alert.classList.add('alert', 'alert-danger', 'alert-dismissible', 'fade', 'show');
            alert.innerHTML = `
                <strong>Error!</strong> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            alertContainer.appendChild(alert);

            setTimeout(() => {
                alertContainer.removeChild(alert);
            }, 2000);
        }



</script>
</html>
